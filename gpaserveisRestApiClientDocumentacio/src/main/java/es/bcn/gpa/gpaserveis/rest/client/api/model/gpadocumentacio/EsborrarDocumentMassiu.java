/*
 * API gpadocumentacio
 * API gpadocumentacio
 *
 * OpenAPI spec version: 2.10.0
 * Contact: sergio.corras@iecisa.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package es.bcn.gpa.gpaserveis.rest.client.api.model.gpadocumentacio;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * EsborrarDocumentMassiu
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-11-04T14:21:11.408+01:00")
public class EsborrarDocumentMassiu {
  @JsonProperty("codiExpedient")
  private String codiExpedient = null;

  @JsonProperty("configuracio")
  private String configuracio = null;

  @JsonProperty("listIdDocument")
  private List<BigDecimal> listIdDocument = null;

  public EsborrarDocumentMassiu codiExpedient(String codiExpedient) {
    this.codiExpedient = codiExpedient;
    return this;
  }

   /**
   * Acci贸 a realitzar per l&#39;portafirmas
   * @return codiExpedient
  **/
  @ApiModelProperty(value = "Acci贸 a realitzar per l'portafirmas")
  public String getCodiExpedient() {
    return codiExpedient;
  }

  public void setCodiExpedient(String codiExpedient) {
    this.codiExpedient = codiExpedient;
  }

  public EsborrarDocumentMassiu configuracio(String configuracio) {
    this.configuracio = configuracio;
    return this;
  }

   /**
   * Configuraci贸 del document.
   * @return configuracio
  **/
  @ApiModelProperty(value = "Configuraci贸 del document.")
  public String getConfiguracio() {
    return configuracio;
  }

  public void setConfiguracio(String configuracio) {
    this.configuracio = configuracio;
  }

  public EsborrarDocumentMassiu listIdDocument(List<BigDecimal> listIdDocument) {
    this.listIdDocument = listIdDocument;
    return this;
  }

  public EsborrarDocumentMassiu addListIdDocumentItem(BigDecimal listIdDocumentItem) {
    if (this.listIdDocument == null) {
      this.listIdDocument = new ArrayList<BigDecimal>();
    }
    this.listIdDocument.add(listIdDocumentItem);
    return this;
  }

   /**
   * Llista d&#39;identificadors dels documents
   * @return listIdDocument
  **/
  @ApiModelProperty(value = "Llista d'identificadors dels documents")
  public List<BigDecimal> getListIdDocument() {
    return listIdDocument;
  }

  public void setListIdDocument(List<BigDecimal> listIdDocument) {
    this.listIdDocument = listIdDocument;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EsborrarDocumentMassiu esborrarDocumentMassiu = (EsborrarDocumentMassiu) o;
    return Objects.equals(this.codiExpedient, esborrarDocumentMassiu.codiExpedient) &&
        Objects.equals(this.configuracio, esborrarDocumentMassiu.configuracio) &&
        Objects.equals(this.listIdDocument, esborrarDocumentMassiu.listIdDocument);
  }

  @Override
  public int hashCode() {
    return Objects.hash(codiExpedient, configuracio, listIdDocument);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EsborrarDocumentMassiu {\n");
    
    sb.append("    codiExpedient: ").append(toIndentedString(codiExpedient)).append("\n");
    sb.append("    configuracio: ").append(toIndentedString(configuracio)).append("\n");
    sb.append("    listIdDocument: ").append(toIndentedString(listIdDocument)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

