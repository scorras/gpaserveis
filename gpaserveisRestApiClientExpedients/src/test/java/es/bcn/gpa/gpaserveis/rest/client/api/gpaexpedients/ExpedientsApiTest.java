/*
 * API gpaexpedients
 * API gpaexpedients
 *
 * OpenAPI spec version: 1.17.0
 * Contact: sergio.corras@iecisa.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package es.bcn.gpa.gpaserveis.rest.client.api.gpaexpedients;

import es.bcn.gpa.gpaserveis.rest.client.api.model.gpaexpedients.AnotarOperacioComptableRDTO;
import java.math.BigDecimal;
import es.bcn.gpa.gpaserveis.rest.client.api.model.gpaexpedients.CanviUnitatGestoraRDTO;
import es.bcn.gpa.gpaserveis.rest.client.api.model.gpaexpedients.ConvidarTramitarRDTO;
import es.bcn.gpa.gpaserveis.rest.client.api.model.gpaexpedients.CrearRegistre;
import es.bcn.gpa.gpaserveis.rest.client.api.model.gpaexpedients.ExpedientCanviEstat;
import es.bcn.gpa.gpaserveis.rest.client.api.model.gpaexpedients.InscriureEnRegistreRDTO;
import es.bcn.gpa.gpaserveis.rest.client.api.model.gpaexpedients.ObtenirPerInteroperabilitat;
import es.bcn.gpa.gpaserveis.rest.client.api.model.gpaexpedients.RespostaCanviarEstatAccioExpedient;
import es.bcn.gpa.gpaserveis.rest.client.api.model.gpaexpedients.RespostaInteroperabilitat;
import es.bcn.gpa.gpaserveis.rest.client.api.model.gpaexpedients.RetornarTramitacioRDTO;
import es.bcn.gpa.gpaserveis.rest.client.api.model.gpaexpedients.TornarEnrereRDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExpedientsApi
 */
@Ignore
public class ExpedientsApiTest {

    private final ExpedientsApi api = new ExpedientsApi();

    
    /**
     * Anotar Operaci√≥ Comptable
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void anotarOperacioComptableTest() {
        BigDecimal idExpedient = null;
        AnotarOperacioComptableRDTO anotarOperacioComptableRDTO = null;
        api.anotarOperacioComptable(idExpedient, anotarOperacioComptableRDTO);

        // TODO: test validations
    }
    
    /**
     * Canvia l&#39;estat d&#39;un expedient
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void canviarEstatExpedientTest() {
        BigDecimal idExpedient = null;
        ExpedientCanviEstat expedientCanviEstatRDTO = null;
        RespostaCanviarEstatAccioExpedient response = api.canviarEstatExpedient(idExpedient, expedientCanviEstatRDTO);

        // TODO: test validations
    }
    
    /**
     * CanviarUnitatGestora
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void canviarUnitatGestoraExpedientTest() {
        CanviUnitatGestoraRDTO canviUnitatGestoraRDTO = null;
        BigDecimal idExpedient = null;
        api.canviarUnitatGestoraExpedient(canviUnitatGestoraRDTO, idExpedient);

        // TODO: test validations
    }
    
    /**
     * ConvidarTramitar
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void convidarTramitarExpedientTest() {
        ConvidarTramitarRDTO convidarTramitarRDTO = null;
        BigDecimal idExpedient = null;
        api.convidarTramitarExpedient(convidarTramitarRDTO, idExpedient);

        // TODO: test validations
    }
    
    /**
     * Esborrar registre solicitud expedient
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void esborrarRegistreSolicitudExpedientTest() {
        CrearRegistre registrarSolicitudExpedientRDTO = null;
        api.esborrarRegistreSolicitudExpedient(registrarSolicitudExpedientRDTO);

        // TODO: test validations
    }
    
    /**
     * Inscriure en un registre
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void inscriureEnRegistreTest() {
        BigDecimal idExpedient = null;
        InscriureEnRegistreRDTO inscriureEnRegistreRDTO = null;
        api.inscriureEnRegistre(idExpedient, inscriureEnRegistreRDTO);

        // TODO: test validations
    }
    
    /**
     * obtenirPerInteroperabilitat
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void obtenirPerInteroperabilitatTest() {
        BigDecimal idExpedient = null;
        ObtenirPerInteroperabilitat obtenirPerInteroperabilitatRDTO = null;
        RespostaInteroperabilitat response = api.obtenirPerInteroperabilitat(idExpedient, obtenirPerInteroperabilitatRDTO);

        // TODO: test validations
    }
    
    /**
     * RetornarTramitacio
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retornarTramitacioExpedientTest() {
        BigDecimal idExpedient = null;
        RetornarTramitacioRDTO retornarTramitacioRDTO = null;
        api.retornarTramitacioExpedient(idExpedient, retornarTramitacioRDTO);

        // TODO: test validations
    }
    
    /**
     * TornarEnrere expedient
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tornarEnrereTest() {
        BigDecimal idExpedient = null;
        TornarEnrereRDTO tornarEnrereRDTO = null;
        api.tornarEnrere(idExpedient, tornarEnrereRDTO);

        // TODO: test validations
    }
    
}
