/*
 * API gpaprocediments
 * API gpaprocediments
 *
 * OpenAPI spec version: 1.3.0
 * Contact: sergio.corras@iecisa.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package es.bcn.gpa.gpaserveis.rest.client.api.gpaprocediments;

import static java.math.BigDecimal.ONE;
import static org.junit.Assert.assertTrue;
import static org.mockito.Matchers.any;
import static org.mockito.Matchers.eq;
import static org.mockito.Matchers.isNull;
import static org.mockito.Mockito.when;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;

import javax.ws.rs.core.GenericType;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;
import org.mockito.InjectMocks;

import es.bcn.gpa.gpaserveis.rest.client.api.model.gpaprocediments.ProcedimentsTramitsRDTO;
import es.bcn.gpa.gpaserveis.rest.client.invoker.gpaprocediments.ApiException;

/**
 * API tests for ProcedimentsTramitsApi
 */
@SuppressWarnings("unchecked")
@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ProcedimentsTramitsApiTest extends ParentTest {

	@InjectMocks
	private ProcedimentsTramitsApi api = new ProcedimentsTramitsApi();

	/**
	 * Inserts the provided tramits for procediment
	 *
	 * 
	 *
	 * @throws ApiException
	 *             if the Api call fails
	 */
	@Test
	public void associarUsingPOST1Test() throws ApiException {
		when(apiClient.invokeAPI(eq("/procediments/tramits/associar"), eq("POST"), any(List.class), any(Object.class), any(Map.class),
		        any(Map.class), isNull(String.class), isNull(String.class), any(String[].class), any(GenericType.class))).thenReturn(null);

		List<ProcedimentsTramitsRDTO> procedimentsTramitsRDTOList = Arrays.asList(new ProcedimentsTramitsRDTO());
		api.associarUsingPOST1(procedimentsTramitsRDTOList);

		assertTrue(true);
	}

	/**
	 * Removes the provided tramits from procediment
	 *
	 * 
	 *
	 * @throws ApiException
	 *             if the Api call fails
	 */
	@Test
	public void desassociarUsingPOST1Test() throws ApiException {
		when(apiClient.invokeAPI(eq("/procediments/tramits/desassociar"), eq("POST"), any(List.class), any(Object.class), any(Map.class),
		        any(Map.class), isNull(String.class), isNull(String.class), any(String[].class), any(GenericType.class))).thenReturn(null);

		List<ProcedimentsTramitsRDTO> procedimentsTramitsRDTOList = Arrays.asList(new ProcedimentsTramitsRDTO());
		api.desassociarUsingPOST1(procedimentsTramitsRDTOList);

		assertTrue(true);
	}

	/**
	 * Returns all the tramits for the procedure that meet the search criteria
	 *
	 * 
	 *
	 * @throws ApiException
	 *             if the Api call fails
	 */
	@Test
	public void tramitsForProcedimentUsingGETTest() throws ApiException {
		when(apiClient.escapeString(any(String.class))).thenReturn(ONE.toString());
		when(apiClient.invokeAPI(eq("/procediments/tramits/1"), eq("GET"), any(List.class), any(Object.class), any(Map.class),
		        any(Map.class), any(String.class), any(String.class), any(String[].class), any(GenericType.class)))
		                .thenReturn(new ArrayList<BigDecimal>());

		BigDecimal id = ONE;
		List<BigDecimal> response = api.tramitsForProcedimentUsingGET(id);

		assertTrue(response != null);
	}

}
